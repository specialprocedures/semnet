[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "semnet"
version = "0.1.3"
authors = [
    {name = "Ian Goodrich", email = "ian@igdr.ch"},
]
description = "Semantic Networks from Embeddings"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["semantic networks", "embeddings", "graph analysis", "nlp", "similarity", "networkx"]
dependencies = [
    "networkx>=2.5",
    "annoy>=1.17.0",
    "numpy>=1.19.0",
    "pandas>=1.2.0",
    "tqdm>=4.60.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "isort>=5.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "sentence-transformers>=2.0.0",  # For examples
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.17",
]
examples = [
    "sentence-transformers>=2.0.0",
    "matplotlib>=3.3.0",
    "jupyter>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/specialprocedures/semnet"
Documentation = "https://semnetdocs.readthedocs.io"
Repository = "https://github.com/specialprocedures/semnet"
"Bug Tracker" = "https://github.com/specialprocedures/semnet/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-config --verbose"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true